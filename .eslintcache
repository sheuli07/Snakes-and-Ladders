[{"/home/sheuli/Project/React/snack-ladder/src/index.js":"1","/home/sheuli/Project/React/snack-ladder/src/App.js":"2","/home/sheuli/Project/React/snack-ladder/src/reportWebVitals.js":"3","/home/sheuli/Project/React/snack-ladder/src/component/board.js":"4","/home/sheuli/Project/React/snack-ladder/src/component/squareBox.js":"5","/home/sheuli/Project/React/snack-ladder/src/component/panel.js":"6","/home/sheuli/Project/React/snack-ladder/src/utils/result.js":"7"},{"size":513,"mtime":1608994637874,"results":"8","hashOfConfig":"9"},{"size":255,"mtime":1608963250504,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608821991188,"results":"11","hashOfConfig":"9"},{"size":2059,"mtime":1608995105195,"results":"12","hashOfConfig":"9"},{"size":1236,"mtime":1608994981709,"results":"13","hashOfConfig":"9"},{"size":3186,"mtime":1608914040884,"results":"14","hashOfConfig":"9"},{"size":453,"mtime":1608992556301,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"pwr8xy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"/home/sheuli/Project/React/snack-ladder/src/index.js",[],["36","37"],"/home/sheuli/Project/React/snack-ladder/src/App.js",[],"/home/sheuli/Project/React/snack-ladder/src/reportWebVitals.js",[],"/home/sheuli/Project/React/snack-ladder/src/component/board.js",["38","39"],"import React, { useState } from \"react\";\nimport SquareBox from \"./squareBox\";\nimport Panel from \"./panel\";\n\nfunction Board() {\n    const [player, setPlayer] = useState([\n        {\n            name: \"A\",\n            score: 0,\n            color: \"red\",\n        },\n        {\n            name: \"B\",\n            score: 0,\n            color: \"blue\",\n        },\n    ]);\n\n    return (\n        <div style={{ display: \"inline-flex\" }}>\n            <div className=\"board\">\n                {[...new Array(10)].map((item, rowindex) => {\n                    return (\n                        <div\n                            className={\n                                rowindex % 2 == 0 ? \"row\" : \"row_reverse\"\n                            }\n                            key={rowindex}\n                        >\n                            {[...new Array(10)].map((item2, columnindex) => {\n                                let playerInBox = player.filter(\n                                    (eachPlayer) =>\n                                        eachPlayer.score ==\n                                        rowindex * 10 + columnindex + 1\n                                );\n                                return (\n                                    <SquareBox\n                                        key={rowindex * 10 + columnindex + 1}\n                                        boxnum={rowindex * 10 + columnindex + 1}\n                                        // player={player}\n                                        player={\n                                            Boolean(playerInBox.length)\n                                                ? playerInBox\n                                                : undefined\n                                        }\n                                    />\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n\n            <Panel playerList={player} setPlayer={setPlayer} />\n        </div>\n    );\n}\n\nexport default Board;\n","/home/sheuli/Project/React/snack-ladder/src/component/squareBox.js",["40","41","42","43"],"import React from \"react\";\nimport Data from \"../utils/data.json\";\n\nconst SquareBox = React.memo((props) => {\n    const { boxnum, player } = props;\n    let ladder = Data.ladder.filter(\n        (value) => value.start == boxnum || value.end == boxnum\n    );\n    let snake = Data.snake.filter(\n        (value) => value.head == boxnum || value.tail == boxnum\n    );\n    console.log(\"i am called for \", boxnum);\n    console.log(\"herererere\", player);\n    return (\n        <div className={boxnum % 2 ? \"bluegrey-box\" : \"beige-box\"} key={boxnum}>\n            <p>{boxnum}</p>\n            <div style={{ display: \"flex\" }}>\n                {Boolean(ladder.length) && <div>{ladder[0].label}</div>}\n                {Boolean(snake.length) && <div>{snake[0].label}</div>}\n                {player &&\n                    player.map((item, index) => {\n                        return (\n                            <div\n                                className=\"circle\"\n                                style={{ background: item.color }}\n                                key={boxnum + \"_\" + index}\n                            ></div>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n});\n\nexport default SquareBox;\n","/home/sheuli/Project/React/snack-ladder/src/component/panel.js",["44","45","46"],"import React, { useState } from \"react\";\nimport { ScoreCalculator, numToString } from \"../utils/result\";\n\nfunction Panel(props) {\n    const { playerList, setPlayer } = props;\n    const [selectNumber, setSelectNumber] = React.useState(1);\n    const [rolling, setrolling] = useState(false);\n    const [isNext, setisNext] = useState(true);\n    const setNumber = (num) => {\n        let player = isNext ? \"A\" : \"B\";\n        setSelectNumber(num);\n        setPlayer(\n            [...playerList].map((item) => {\n                if (item.name === player) {\n                    return {\n                        ...item,\n                        score: ScoreCalculator(item.score, num),\n                    };\n                }\n                return item;\n            })\n        );\n        setisNext(!isNext);\n    };\n\n    const reset = () => {\n        setisNext(true);\n        setSelectNumber(1);\n        setPlayer(\n            [...playerList].map((item) => {\n                return {\n                    ...item,\n                    score: 0,\n                };\n            })\n        );\n    };\n\n    return (\n        <div className=\"panel-box\">\n            <div>\n                {playerList.map((item) => {\n                    return (\n                        <div\n                            style={{\n                                padding: \"4px\",\n                                backgroundColor: item.color,\n                                color: \"#FFFFFF\",\n                                fontWeight: 600,\n                            }}\n                        >\n                            <p>{`${item.name} Player score: ${item.score}`}</p>\n                        </div>\n                    );\n                })}\n            </div>\n\n            <div className=\"dice-container\">\n                {playerList.filter((item) => item.score == 100)[0] ? (\n                    <p>\n                        {`${\n                            playerList.filter((item) => item.score == 100)[0]\n                                .name\n                        } Wins`}\n                    </p>\n                ) : (\n                    <p>The Next Player is: {isNext ? \"A\" : \"B\"}</p>\n                )}\n                {/* <div className=\"bluegrey-box\">{selectNumber}</div> */}\n\n                <i\n                    className={`dice fas fa-dice-${numToString(selectNumber)} ${\n                        rolling && \"dice-rolling\"\n                    }`}\n                ></i>\n                {!playerList.filter((item) => item.score == 100)[0] ? (\n                    <button\n                        onClick={() => {\n                            setrolling(true);\n                            setTimeout(() => {\n                                setrolling(false);\n                                setNumber(Math.ceil(Math.random() * 6));\n                            }, 1000);\n                        }}\n                        disabled={rolling}\n                    >\n                        Roll Dice\n                    </button>\n                ) : (\n                    <button onClick={() => reset()}>Play Again</button>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Panel;\n","/home/sheuli/Project/React/snack-ladder/src/utils/result.js",["47","48"],"import Data from \"./data.json\";\nexport const ScoreCalculator = (score, num) => {\n    if (score + num > 100) {\n        return score;\n    }\n    score = score + num;\n    let ladderScore = Data.ladder.find((item) => item.start == score);\n    if (ladderScore) return ladderScore.end;\n\n    let snake = Data.snake.find((item) => item.head == score);\n    if (snake) return snake.tail;\n\n    return score;\n};\n\nexport const numToString = (num) => Data.sides[num];\n",["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":26,"column":46,"nodeType":"57","messageId":"58","endLine":26,"endColumn":48},{"ruleId":"55","severity":1,"message":"56","line":33,"column":58,"nodeType":"57","messageId":"58","endLine":33,"endColumn":60},{"ruleId":"55","severity":1,"message":"56","line":7,"column":32,"nodeType":"57","messageId":"58","endLine":7,"endColumn":34},{"ruleId":"55","severity":1,"message":"56","line":7,"column":55,"nodeType":"57","messageId":"58","endLine":7,"endColumn":57},{"ruleId":"55","severity":1,"message":"56","line":10,"column":31,"nodeType":"57","messageId":"58","endLine":10,"endColumn":33},{"ruleId":"55","severity":1,"message":"56","line":10,"column":55,"nodeType":"57","messageId":"58","endLine":10,"endColumn":57},{"ruleId":"55","severity":1,"message":"56","line":59,"column":57,"nodeType":"57","messageId":"58","endLine":59,"endColumn":59},{"ruleId":"55","severity":1,"message":"56","line":62,"column":68,"nodeType":"57","messageId":"58","endLine":62,"endColumn":70},{"ruleId":"55","severity":1,"message":"56","line":76,"column":58,"nodeType":"57","messageId":"58","endLine":76,"endColumn":60},{"ruleId":"55","severity":1,"message":"56","line":7,"column":61,"nodeType":"57","messageId":"58","endLine":7,"endColumn":63},{"ruleId":"55","severity":1,"message":"56","line":10,"column":53,"nodeType":"57","messageId":"58","endLine":10,"endColumn":55},{"ruleId":"51","replacedBy":"59"},{"ruleId":"53","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["61"],["62"],"no-global-assign","no-unsafe-negation"]